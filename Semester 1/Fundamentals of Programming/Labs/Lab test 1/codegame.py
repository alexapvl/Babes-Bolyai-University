from random import randint

#
# Functions section
#

def valid(x: str) -> bool:
    if x[0] == '0':
        # Only here for human input, numbers cannot start with digit '0'
        return False
    if not x.isdigit():
        return False
    if len(x) != 4:
        # Only here for human input, computer will generate a number which has 4 digits
        return False
    digit1 = int(x[3])
    digit2 = int(x[2])
    digit3 = int(x[1])
    digit4 = int(x[0])
    if len(set([digit1, digit2, digit3, digit4])) == 4:
        # checks if all the digits are different
        return True
    return False

def generate_random_number() -> str:
    """
    Function that generates a random 4 digit number and 
    validating it with the validation function.

    Returns:
        str: The generated number, in form of a string
    """
    x = randint(1000, 9999)
    while not valid(str(x)):
        x = (randint(1000, 9999))
    return str(x)

def codes_runners(computer: str, human: str) -> tuple:
    """Codes are correct digits in correct positions
    Runners are correct digits in incorrect positions
    
    Knowing that the input is valid(was checked beforehand in main)
    we have a for loop that goes through the human number and checks
    if each digit is a code or a runner.
    If the digit is on the same index in the human number as it is in 
    the computer number, then the digit is a code.
    If the digit is not on the same index, but it is in the number as a whole,
    that means that the digit is a runner.

    Args:
        computer (str): Number generated by computer
        human (str): Human number

    Returns:
        tuple: codes -> number of correct digits in correct positions
        runners -> number of correct digits in incorrect positions
    """
    codes: int = 0
    runners: int = 0
    for i in range(4):
        if human[i] == computer[i]:
            # same position => digit is a code
            codes += 1
        else:
            # not a code, check if digit is a runner
            if human[i] in computer:
                # Checks if the digit is in the string. If so, digit is will be a runner
                runners += 1
    return codes, runners    

#
# User interface section
#
    
def main():
    number: str  = generate_random_number()
    while True:
        human_number: str = input("Guess: ")
        if human_number == "8086":
            print(f"You already gave up?\nNumber was: {number}")
        else:
            if not valid(human_number):
                print("Invalid guess. Game over. Computer wins")
                break
            if human_number == number:
                print("Number was guessed! Human wins")
                break
            else:
                # If number was not guessed, print the number of codes and runners
                codes, runenrs = codes_runners(number, human_number)
                print(f"Computer message: {codes} codes and {runenrs} runners")
                
main()
